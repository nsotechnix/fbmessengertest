{"ast":null,"code":"import React, { useEffect } from 'react'; // Customer chat sdk: https://developers.facebook.com/docs/messenger-platform/discovery/customer-chat-plugin/sdk/\n// flag to identify wether or not messenger chat is mounted\n\nvar isMounted = false; // added to be able to access debug mode outside component\n\nvar globalDebugModeFlag = false;\nvar MessengerChat = React.forwardRef(function (_ref, ref) {\n  var pageId = _ref.pageId,\n      _ref$language = _ref.language,\n      language = _ref$language === void 0 ? \"en_US\" : _ref$language,\n      themeColor = _ref.themeColor,\n      height = _ref.height,\n      _ref$autoExpand = _ref.autoExpand,\n      autoExpand = _ref$autoExpand === void 0 ? true : _ref$autoExpand,\n      loggedInGreeting = _ref.loggedInGreeting,\n      loggedOutGreeting = _ref.loggedOutGreeting,\n      onMessengerMounted = _ref.onMessengerMounted,\n      onMessengerLoad = _ref.onMessengerLoad,\n      onMessengerShow = _ref.onMessengerShow,\n      onMessengerHide = _ref.onMessengerHide,\n      onMessengerDialogShow = _ref.onMessengerDialogShow,\n      onMessengerDialogHide = _ref.onMessengerDialogHide,\n      _ref$debugMode = _ref.debugMode,\n      debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode,\n      _ref$version = _ref.version,\n      version = _ref$version === void 0 ? \"v11.0\" : _ref$version;\n\n  var initExpand = function initExpand() {\n    var _a;\n\n    if (debugMode) {\n      console.log(\"[react-messenger-chat-plugin] expanding on init\");\n    }\n\n    try {\n      var localStorageObject = localStorage.getItem(\"__fb_chat_plugin\");\n      var cachedChatState = localStorageObject ? JSON.parse(localStorageObject) : null; //https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming/type\n\n      var samePageNavigation = //@ts-ignore\n      ((_a = performance === null || performance === void 0 ? void 0 : performance.getEntriesByType(\"navigation\")[0]) === null || _a === void 0 ? void 0 : _a.type) !== \"navigate\";\n\n      if (cachedChatState && (cachedChatState === null || cachedChatState === void 0 ? void 0 : cachedChatState.visibility) === \"hidden\" && !samePageNavigation) {\n        FB.CustomerChat.show();\n      }\n    } catch (err) {\n      console.warn(\"Probblem when autoexpanding messenger chatbox occured. Please file an issue on github.\");\n      throw new Error(err);\n    }\n  };\n\n  var initMessenger = function initMessenger() {\n    if (debugMode) {\n      console.log(\"[react-messenger-chat-plugin] initializing messenger plugin\");\n    }\n\n    try {\n      var chatbox = document.getElementById(\"fb-customer-chat\");\n      chatbox.setAttribute(\"page_id\", pageId);\n      chatbox.setAttribute(\"attribution\", \"biz_inbox\");\n\n      if (themeColor) {\n        chatbox.setAttribute(\"theme_color\", themeColor);\n      }\n\n      if (loggedInGreeting) {\n        chatbox.setAttribute(\"logged_in_greeting\", loggedInGreeting);\n      }\n\n      if (loggedOutGreeting) {\n        chatbox.setAttribute(\"logged_out_greeting\", loggedOutGreeting);\n      }\n\n      if (autoExpand) {\n        chatbox.setAttribute(\"greeting_dialog_display\", \"show\");\n        chatbox.setAttribute(\"greeting_dialog_delay\", \"0\");\n      } else {\n        chatbox.setAttribute(\"greeting_dialog_display\", \"hide\");\n      }\n\n      if (height != undefined) {\n        setMessengerHeight(height);\n      }\n\n      window.fbAsyncInit = function () {\n        FB.init({\n          xfbml: true,\n          version: version\n        });\n        FB.Event.subscribe(\"customerchat.load\", function () {\n          // we check if not undefined, since 0 should still be a valid number\n          if (onMessengerLoad) onMessengerLoad();\n        });\n        FB.Event.subscribe(\"xfbml.render\", function () {\n          //this is necessary to manually open chatbox on init when state (especially visibility=hidden) is cached in localStorage.\n          if (autoExpand) {\n            setTimeout(initExpand, 3000);\n          }\n\n          if (onMessengerMounted) {\n            onMessengerMounted();\n          }\n\n          isMounted = true;\n        });\n        FB.Event.subscribe(\"customerchat.show\", function () {\n          if (onMessengerShow) onMessengerShow();\n        });\n        FB.Event.subscribe(\"customerchat.hide\", function () {\n          if (onMessengerHide) onMessengerHide();\n        });\n        FB.Event.subscribe(\"customerchat.dialogShow\", function () {\n          if (onMessengerDialogShow) onMessengerDialogShow();\n        });\n        FB.Event.subscribe(\"customerchat.dialogHide\", function () {\n          if (onMessengerDialogHide) onMessengerDialogHide();\n        });\n      };\n\n      (function (d, s, id) {\n        var _a;\n\n        var js,\n            // eslint-disable-next-line prefer-const\n        fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) return; // eslint-disable-next-line prefer-const\n\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"https://connect.facebook.net/\".concat(language, \"/sdk/xfbml.customerchat.js\");\n        (_a = fjs === null || fjs === void 0 ? void 0 : fjs.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(js, fjs);\n      })(document, \"script\", \"facebook-jssdk\");\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  useEffect(function () {\n    try {\n      globalDebugModeFlag = debugMode;\n      initMessenger();\n    } catch (err) {\n      console.log(err);\n    }\n  });\n  return React.createElement(\"div\", {\n    ref: ref\n  }, React.createElement(\"div\", {\n    id: \"fb-root\"\n  }), React.createElement(\"div\", {\n    id: \"fb-customer-chat\",\n    className: \"fb-customerchat\"\n  }));\n}); //NOTE: THIS IS A VERY HACKY WAY OF MODIFYING ELEMENTS STYLE.\n\nvar setMessengerHeight = function setMessengerHeight(height) {\n  if (globalDebugModeFlag) {\n    console.log(\"[react-messenger-chat-plugin] setting messenger height: \".concat(height));\n  }\n\n  var css = \"\\n  .fb-customerchat {\\n    display: none !important;\\n    visibility: hidden !important;\\n  }\\n\\n  [data-testid=\\\"bubble_iframe\\\"] {\\n    bottom: \".concat(height, \"px !important;\\n  }\\n\\n  [data-testid='dialog_iframe'] {\\n    bottom: \").concat(height + 56, \"px !important;\\n  }\\n  \");\n  var style = document.createElement(\"style\");\n  document.head.appendChild(style);\n  style.type = \"text/css\";\n  style.appendChild(document.createTextNode(css));\n};\n\nvar showMessenger = function showMessenger(shouldShowDialog) {\n  if (globalDebugModeFlag) {\n    console.log(\"[react-messenger-chat-plugin] showing messenger with argument \\\"shouldShowDialog\\\": \".concat(shouldShowDialog));\n  }\n\n  try {\n    if (isMounted && (FB === null || FB === void 0 ? void 0 : FB.CustomerChat)) {\n      FB.CustomerChat.show(shouldShowDialog);\n    } else if (!isMounted) {\n      console.warn(\"Messenger could not expand messenger due to the messenger chat not beeing mounted yet.\");\n    }\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nvar hideMessenger = function hideMessenger() {\n  if (globalDebugModeFlag) {\n    console.log(\"[react-messenger-chat-plugin] hiding messenger with argument\");\n  }\n\n  try {\n    if (isMounted && (FB === null || FB === void 0 ? void 0 : FB.CustomerChat)) {\n      FB.CustomerChat.hide();\n    } else if (!isMounted) {\n      console.warn(\"Messenger could not hide messenger due to the messenger chat not beeing mounted yet.\");\n    }\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nvar showDialog = function showDialog() {\n  if (globalDebugModeFlag) {\n    console.log(\"[react-messenger-chat-plugin] showing dialog\");\n  }\n\n  try {\n    if (isMounted && (FB === null || FB === void 0 ? void 0 : FB.CustomerChat)) {\n      FB.CustomerChat.showDialog();\n    } else if (!isMounted) {\n      console.warn(\"Messenger could not show dialog due to the messenger chat not beeing mounted yet.\");\n    }\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nvar hideDialog = function hideDialog() {\n  if (globalDebugModeFlag) {\n    console.log(\"[react-messenger-chat-plugin] hiding dialog\");\n  }\n\n  try {\n    if (isMounted && (FB === null || FB === void 0 ? void 0 : FB.CustomerChat)) {\n      FB.CustomerChat.hideDialog();\n    } else if (!isMounted) {\n      console.warn(\"Messenger could not hide dialog due to the messenger chat not beeing mounted yet.\");\n    }\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport { MessengerChat, hideDialog, hideMessenger, setMessengerHeight, showDialog, showMessenger };","map":null,"metadata":{},"sourceType":"module"}